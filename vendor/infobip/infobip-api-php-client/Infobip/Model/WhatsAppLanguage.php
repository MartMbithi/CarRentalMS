<?php
/**
 * WhatsAppLanguage
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Infobip
 * @author   Infobip Support
 * @link     https://www.infobip.com
 */

/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

namespace Infobip\Model;

use Infobip\ObjectSerializer;

/**
 * WhatsAppLanguage Class Doc Comment
 *
 * @category Class
 * @description Template language, one template with same name can have multiple transliterations.
 * @package  Infobip
 * @author   Infobip Support
 * @link     https://www.infobip.com
 */
class WhatsAppLanguage
{
    /**
     * Possible values of this enum
     */
    public const AF = 'af';
    public const SQ = 'sq';
    public const AR = 'ar';
    public const AZ = 'az';
    public const BN = 'bn';
    public const BG = 'bg';
    public const CA = 'ca';
    public const ZH_CN = 'zh_CN';
    public const ZH_HK = 'zh_HK';
    public const ZH_TW = 'zh_TW';
    public const HR = 'hr';
    public const CS = 'cs';
    public const DA = 'da';
    public const NL = 'nl';
    public const EN = 'en';
    public const EN_GB = 'en_GB';
    public const EN_US = 'en_US';
    public const ET = 'et';
    public const FIL = 'fil';
    public const FI = 'fi';
    public const FR = 'fr';
    public const DE = 'de';
    public const EL = 'el';
    public const GU = 'gu';
    public const HA = 'ha';
    public const HE = 'he';
    public const HI = 'hi';
    public const HU = 'hu';
    public const ID = 'id';
    public const GA = 'ga';
    public const IT = 'it';
    public const JA = 'ja';
    public const KN = 'kn';
    public const KK = 'kk';
    public const KO = 'ko';
    public const LO = 'lo';
    public const LV = 'lv';
    public const LT = 'lt';
    public const MK = 'mk';
    public const MS = 'ms';
    public const ML = 'ml';
    public const MR = 'mr';
    public const NB = 'nb';
    public const FA = 'fa';
    public const PL = 'pl';
    public const PT_BR = 'pt_BR';
    public const PT_PT = 'pt_PT';
    public const PA = 'pa';
    public const RO = 'ro';
    public const RU = 'ru';
    public const SR = 'sr';
    public const SK = 'sk';
    public const SL = 'sl';
    public const ES = 'es';
    public const ES_AR = 'es_AR';
    public const ES_ES = 'es_ES';
    public const ES_MX = 'es_MX';
    public const SW = 'sw';
    public const SV = 'sv';
    public const TA = 'ta';
    public const TE = 'te';
    public const TH = 'th';
    public const TR = 'tr';
    public const UK = 'uk';
    public const UR = 'ur';
    public const UZ = 'uz';
    public const VI = 'vi';
    public const UNKNOWN = 'unknown';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::AF,
            self::SQ,
            self::AR,
            self::AZ,
            self::BN,
            self::BG,
            self::CA,
            self::ZH_CN,
            self::ZH_HK,
            self::ZH_TW,
            self::HR,
            self::CS,
            self::DA,
            self::NL,
            self::EN,
            self::EN_GB,
            self::EN_US,
            self::ET,
            self::FIL,
            self::FI,
            self::FR,
            self::DE,
            self::EL,
            self::GU,
            self::HA,
            self::HE,
            self::HI,
            self::HU,
            self::ID,
            self::GA,
            self::IT,
            self::JA,
            self::KN,
            self::KK,
            self::KO,
            self::LO,
            self::LV,
            self::LT,
            self::MK,
            self::MS,
            self::ML,
            self::MR,
            self::NB,
            self::FA,
            self::PL,
            self::PT_BR,
            self::PT_PT,
            self::PA,
            self::RO,
            self::RU,
            self::SR,
            self::SK,
            self::SL,
            self::ES,
            self::ES_AR,
            self::ES_ES,
            self::ES_MX,
            self::SW,
            self::SV,
            self::TA,
            self::TE,
            self::TH,
            self::TR,
            self::UK,
            self::UR,
            self::UZ,
            self::VI,
            self::UNKNOWN,
        ];
    }
}
